{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","Filter","props","value","onChange","New","onSubmit","newName","handleNameChange","newNumber","handleNumberChange","type","Persons","personsToShow","map","person","key","name","number","deletePerson","Delete","onClick","Notification","message","error","className","App","useState","persons","setPersons","setNewName","setNewNumber","hakuehto","setHakuehto","showAll","setShowAll","setMessage","setError","useEffect","personService","initialPersons","filter","toUpperCase","includes","event","target","preventDefault","undefined","find","window","confirm","personObject","returnedPerson","setTimeout","catch","concat","p","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8b2d485a.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = 'https://mighty-hollows-72545.herokuapp.com/'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst deletePerson = (id) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, update, deletePerson }","import React, { useState, useEffect } from \"react\"\nimport personService from \"./services/persons\"\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState(\"\")\n  const [newNumber, setNewNumber] = useState(\"\")\n  const [hakuehto, setHakuehto] = useState(\"\")\n  const [showAll, setShowAll] = useState(true)\n  const [message, setMessage] = useState(null)\n  const [error, setError] = useState(null)\n\n  useEffect(() => {\n    personService.getAll().then((initialPersons) => {\n      setPersons(initialPersons)\n    })\n  }, [])\n\n  const onSubmit = (event) => {\n    event.preventDefault()\n    const onkoJo = persons.find((person) => person.name === newName)\n    //jos henkilö löytyy listalta\n    if (onkoJo !== undefined) {\n      //jos halutaan muokata olemassa olevan henkilön puhelinnumeroa\n      if (\n        window.confirm(\n          `${newName} is already added to phonebook, replace the old number with a new one?`\n        )\n      ) {\n        const personObject = {\n          name: newName,\n          number: newNumber,\n        }\n        const id = persons.find((person) => person.name === newName).id\n        personService\n          .update(id, personObject)\n          .then((returnedPerson) => {\n            setPersons(\n              persons.map((person) =>\n                person.id !== id ? person : returnedPerson\n              )\n            )\n            setNewName(\"\")\n            setNewNumber(\"\")\n            setMessage(`Updated ${newName}`)\n            setTimeout(() => {\n              setMessage(null)\n            }, 5000)\n          })\n          .catch((error) => {\n            setError(\n              `Information of ${newName} has already been removed from server`\n            )\n            setTimeout(() => {\n              setError(null)\n            }, 5000)\n          })\n      } else {\n        //jos ei haluta muokata olemassa olevaa\n        setNewName(\"\")\n        setNewNumber(\"\")\n      }\n    } else {\n      //jos henkilöä ei löydy, lisätään uutena\n      const personObject = {\n        name: newName,\n        number: newNumber,\n      }\n      personService.create(personObject).then((returnedPerson) => {\n        setPersons(persons.concat(returnedPerson))\n        setNewName(\"\")\n        setNewNumber(\"\")\n        setMessage(`Created ${newName}`)\n        setTimeout(() => {\n          setMessage(null)\n        }, 5000)\n      })\n    }\n  }\n\n  const deletePerson = (person) => {\n    if (window.confirm(`Delete ${person.name}?`)) {\n      personService.deletePerson(person.id).then(() => {\n        setPersons(persons.filter((p) => p.id !== person.id))\n        setMessage(`Deleted ${person.name}`)\n        setTimeout(() => {\n          setMessage(null)\n        }, 5000)\n      })\n    }\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleHakuehtoChange = (event) => {\n    setShowAll(false)\n    setHakuehto(event.target.value)\n  }\n\n  const personsToShow = showAll\n    ? persons\n    : persons.filter((person) =>\n        person.name.toUpperCase().includes(hakuehto.toUpperCase())\n      )\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message} error={error} />\n      <Filter value={hakuehto} onChange={handleHakuehtoChange} />\n      <h2>Add a new</h2>\n      <New\n        newName={newName}\n        newNumber={newNumber}\n        handleNameChange={handleNameChange}\n        handleNumberChange={handleNumberChange}\n        onSubmit={onSubmit}\n      />\n      <h2>Numbers</h2>\n      <Persons personsToShow={personsToShow} deletePerson={deletePerson} />\n    </div>\n  )\n}\n\nconst Filter = (props) => {\n  return (\n    <div>\n      filter shown with <input value={props.value} onChange={props.onChange} />\n    </div>\n  )\n}\n\nconst New = (props) => {\n  return (\n    <form onSubmit={props.onSubmit}>\n      <div>\n        name: <input value={props.newName} onChange={props.handleNameChange} />\n      </div>\n      <div>\n        number:{\" \"}\n        <input value={props.newNumber} onChange={props.handleNumberChange} />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  )\n}\n\nconst Persons = (props) => {\n  return (\n    <div>\n      {props.personsToShow.map((person) => (\n        <p key={person.name}>\n          {person.name} {person.number}{\" \"}\n          <Delete person={person} deletePerson={props.deletePerson} />\n        </p>\n      ))}\n    </div>\n  )\n}\n\nconst Delete = (props) => {\n  return (\n    <button onClick={() => props.deletePerson(props.person)}>Delete</button>\n  )\n}\n\nconst Notification = ({ message, error }) => {\n  if (message === null && error == null) {\n    return null\n  }\n\n  if (message !== null) {\n    return <div className=\"message\">{message}</div>\n  }\n\n  if (error !== null) {\n    return <div className=\"error\">{error}</div>\n  }\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)"],"sourceRoot":""}